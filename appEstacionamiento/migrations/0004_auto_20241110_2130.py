# Generated by Django 3.2 on 2024-11-11 00:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('appEstacionamiento', '0003_clienteest_telefono'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='La marca solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$'), django.core.validators.MaxLengthValidator(20, message='La marca no debe exceder los 20 caracteres.')])),
                ('patente', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='La patente solo puede contener letras mayúsculas y números.', regex='^[A-Z0-9]+$'), django.core.validators.MinLengthValidator(6, message='La patente debe tener al menos 6 caracteres.'), django.core.validators.MaxLengthValidator(8, message='La patente no debe exceder los 8 caracteres.')])),
                ('modelo', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El modelo solo puede contener letras, números y espacios.', regex='^[a-zA-Z0-9\\s]+$'), django.core.validators.MaxLengthValidator(50, message='El modelo no debe exceder los 50 caracteres.')])),
                ('color', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El color solo puede contener letras y espacios.', regex='^[a-zA-Z\\s]+$'), django.core.validators.MaxLengthValidator(50, message='El color no debe exceder los 50 caracteres.')])),
                ('tipo', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='El tipo solo puede contener letras y espacios.', regex='^[a-zA-Z\\s]+$'), django.core.validators.MaxLengthValidator(20, message='El tipo no debe exceder los 20 caracteres.')])),
            ],
        ),
        migrations.AlterField(
            model_name='clienteest',
            name='apellido',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El apellido solo puede tener letras', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='clienteest',
            name='direccion',
            field=models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(message='La direccion debe incluir el nombre y número de la calle, no solo números.', regex='^(?!^\\d+$)[a-zA-Z0-9\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='clienteest',
            name='nombre',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El nombre solo puede tener letras', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='clienteest',
            name='telefono',
            field=models.CharField(default=0, max_length=15),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_termino', models.DateField()),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEstacionamiento.clienteest')),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appEstacionamiento.vehiculo')),
            ],
        ),
    ]
